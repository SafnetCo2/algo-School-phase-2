* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
.calculator {
  background-color: #f2f2f2;
  padding: 20px;
  max-width: 400px;
  margin: 0 auto;
  border: solid 1px #ccc;
  box-shadow: 0 2px 5px rgb(0, 0, 0, 0.3);
  border-radius: 5px;
  margin-top: 40px;
}
#result {
  width: 100%;
  padding: 10px;
  font-size: 24px;
  border: none;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0, 0.3) inset;
  border-radius: 5px;
}
.buttons {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-gap: 10px;
  margin-top: 20px;
}
button {
  padding: 10px;
  font-size: 24px;
  border: none;
  border-radius: 0.5rem;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0, 0.3);
  cursor: pointer;
  transition: background-color 0.3s ease;
}
button:hover {
  background-color: #ddd;
}
.clear {
  background-color: red;
  color: #fff;
}

.number,
.decimal {
  background-color: #fff;
  color: #333;
}
.operator {
  background-color: #0074d9;
  color: #fff;
}
.cat-left-inner-ear {
  border-left: 20px soild transparent;
  border-right: 20px soild transparent;
  border-bottom: 4opx soild #3bb34f;
}
.equal {
  background-color: #01ff70;
  grid-row: span 3;
}
/*Give the .cat-head element a position property set to absolute. Set a value of 0 for the right, left, top, bottom properties, then set its margin property on all sides to auto. That's one way to center an element vertically and horizontally using CSS positioning.
Using a class selector, give the .cat-left-ear element a left and right border of 35px solid transparent each. Also, set the bottom border to 70px solid #5e5e5e.



*/

.box {
  transform: rotate(-45deg);
  border-left: 35px;
  border-right: 35px;
  width: 200px;
  height: 600px;
  background-color: #000;
  position: absolute;
  top: 800px;
  left: 650px;
}
